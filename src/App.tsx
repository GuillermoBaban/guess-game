import { useEffect, useMemo, useState } from "react";
import "./App.css";

// Generated by https://quicktype.io

export interface Movies {
  backdrop_path: string;
  first_air_date: string;
  genre_ids: number[];
  id: number;
  name: string;
  origin_country: string[];
  original_language: string;
  original_name: string;
  overview: string;
  popularity: number;
  poster_path: string;
  vote_average: number;
  vote_count: number;
}

const missingLatters = (movie: Movies) => {
  const array = Array.from({ length: movie.name.length }, (_, index) => index)
    .sort(() => (Math.random() >= 0.5 ? 1 : -1))
    .slice(0, Math.floor(movie.name.length / 2));

  return movie.name.split("").map((letter, index) => {
    if (array.includes(index) && letter !== " ") {
      return " _ ";
    }
    return letter;
  });
};

function App() {
  const [movies, setMovies] = useState<null | Movies>(null);
  const nameLessLatters = useMemo(() => {
    if (!movies) return "";
    return missingLatters(movies);
  }, [movies]);
  const [score, setScore] = useState(0);
  const [lives, setLives] = useState(3);

  const fetchMovies = () => {
    const getRandomPage = Math.floor(Math.random() * 92);

    fetch(
      `https://api.themoviedb.org/3/tv/top_rated?language=en-US&page=${
        getRandomPage == 0 ? 1 : getRandomPage
      }`,
      {
        headers: {
          Authorization: `Bearer ${import.meta.env.VITE_API_KEY}`,
        },
      }
    )
      .then((res) => res.json() as Promise<{ results: Movies[] }>)
      .then((data) =>
        setMovies(data.results[Math.floor(Math.random() * data.results.length)])
      );
  };

  useEffect(() => {
    fetchMovies();
  }, []);

  if (!movies) return <h1>Loading...</h1>;

  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    let inputValue = (e.currentTarget[0] as HTMLInputElement).value;
    if (inputValue.toLocaleLowerCase() === movies.name.toLocaleLowerCase()) {
      setScore(score + 1);
      (e.currentTarget[0] as HTMLInputElement).value = "";
      fetchMovies();
      alert("You win");
    } else {
      if (score > 0) {
        setScore(score - 1);
      }
      setLives(lives - 1);
      alert("You lose");
      (e.currentTarget[0] as HTMLInputElement).value = "";
    }
  };

  return (
    <main>
      <div className="toolbar">
        <span>
          {lives === 3
            ? "‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è"
            : lives === 2
            ? "‚ù§Ô∏è‚ù§Ô∏è"
            : lives === 1
            ? "‚ù§Ô∏è"
            : ""}
        </span>

        <button className="unstyled-button">
          <span>ü§ö</span>
        </button>
        <span>Score: {score}</span>
      </div>
      <h1>Guess the TV show name</h1>

      <h2>{nameLessLatters}</h2>
      <h2>{movies.name}</h2>
      <form action="submit" onSubmit={handleSubmit}>
        <input type="text" />
        <button type="submit">accept</button>
      </form>
    </main>
  );
}

export default App;
